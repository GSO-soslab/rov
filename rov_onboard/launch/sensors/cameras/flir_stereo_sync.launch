<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      stereo.launch
\authors   Michael Hosmar <mhosmar@clearpathrobotics.com>
\copyright Copyright (c) 2018, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the 
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>
  <!-- Common parameters -->
  <arg name="camera_name" default="rov/sensors/stereo" />
  <arg name="camera_manager" default="stereo_camera_manager" />
  <!-- Right = primary, Left = secondary -->
  <arg name="right_camera_serial" default="20181913" />
  <arg name="right_camera_calibrated" default="0" />
  <arg name="left_camera_serial" default="20181918" />
  <arg name="left_camera_calibrated" default="0" />
  <arg name="start_delay_right" default="3.0" />


  <node pkg="nodelet" type="nodelet" name="$(arg camera_manager)"
        args="manager" required="true" >
        <param name="num_worker_threads" value="4" />
  </node>


  <group ns="$(arg camera_name)" >
    <group ns="right" >

      <node pkg="nodelet" type="nodelet" name="camera_nodelet"
            args="load spinnaker_camera_driver/SpinnakerCameraNodelet /$(arg camera_manager)" 
            launch-prefix="bash -c 'sleep $(arg start_delay_right); $0 $@'" >
            
        <!-- +++++++++++ Basic +++++++++++ -->
        <param name="frame_id" value="right_camera" />
        <param name="serial" value="$(arg right_camera_serial)" />
        <param name="image_format_color_coding" value="BGR8" />  <!-- BayerRG8 -->
        <!-- +++++++++++ Acquisition +++++++++++ -->
        <param name="acquisition_mode" value="Continuous" />        <!-- Continuous: acquires image continously -->
        <param name="acquisition_frame_rate_enable" value="False" />  <!--False: controlled by trigger -->
        <!-- <param name="acquisition_frame_rate" value="20" />           Value: image captured by given framte rate -->
        <!-- +++++++++++ Trigger +++++++++++  -->
        <param name="trigger_source" value="Line3" />                <!-- Line3: Green color and Pin 1 -->
        <param name="enable_trigger" value="On" />
        <param name="trigger_activation_mode" value="RisingEdge" />
        <!-- +++++++++++ Exposure +++++++++++ -->
        <param name="exposure_mode" value="Timed" />         <!-- Timed: exposure time in a specified value -->
        <param name="exposure_auto" value="Continuous" />           <!-- Off: given fixed exposure time; Continuous: auto exposure time -->
        <param name="auto_exposure_time_upper_limit" value="5500" /> 
        <param name="auto_exposure_time_lower_limit" value="1000" />
        <!-- <param name="exposure_time" value="3000" />         10000: exposure time in microseconds -->
        <param name="line_selector" value="Line2" />         <!--Line2: Red color and Pin 3-->
        <param name="line_mode" value="Output" />            <!--Output: output exposure state-->
        <param name="line_source" value="ExposureActive" />  <!--ExposureActive: indicates when the image sensor is exposing-->
        <param name="line_inverter" value="False"/>
        <!-- +++++++++++ Analog +++++++++++ -->
        <param name="auto_gain" value="Continuous" />
        <param name="auto_white_balance" value="Continuous" />
        <!-- +++++++++++ Calibration +++++++++++ -->
          <!-- Use the camera_calibration package to create this file -->
        <!-- <param name="camera_info_url" if="$(arg right_camera_calibrated)"
              value="file://$(env HOME)/.ros/camera_info/$(arg right_camera_serial).yaml" /> -->
      </node>

      <!-- +++++++++++++ Switch camera time to Arduino time ++++++++++++++++++++ -->
      <node pkg="nodelet" type="nodelet" name="synchronizer_nodelet"
            args="load synchronizer_ros/SynchronizerNodelet /$(arg camera_manager)"
            output="screen" required="true">
        <param name="camera_topic" type="string" value="/$(arg camera_name)/right/" />
        <param name="synchronizer_topic" type="string" value="/rov/synchronizer/cam/" />
        <param name="device_name" type="string" value="right_cam" />
      </node>
      
      <!-- Disbale the orginal camera driver image_transport publishing -->
      <group ns="image_raw">
        <rosparam param="disable_pub_plugins">
          - 'image_transport/compressedDepth'
          - 'image_transport/theora'
          - 'image_transport/compressed'
        </rosparam>
      </group>

      <!-- Disbale the sync camera driver image_transport publishing -->
      <group ns="image_numbered/image_raw_sync">
        <rosparam param="disable_pub_plugins">
          - 'image_transport/compressedDepth'
          - 'image_transport/theora'
          <!-- - 'image_transport/compressed' -->
        </rosparam>
      </group>      


    </group> <!-- end of group "right" -->

    <group ns="left" >

      <node pkg="nodelet" type="nodelet" name="camera_nodelet"
            args="load spinnaker_camera_driver/SpinnakerCameraNodelet /$(arg camera_manager)" >
        <!-- +++++++++++ Basic +++++++++++ -->
        <param name="frame_id" value="left_camera" />
        <param name="serial" value="$(arg left_camera_serial)" />
        <param name="image_format_color_coding" value="BGR8" />  <!-- BayerRG8 -->
        <!-- +++++++++++ Acquisition +++++++++++ -->
        <param name="acquisition_mode" value="Continuous" />        <!-- Continuous: acquires image continously -->
        <param name="acquisition_frame_rate_enable" value="False" />  <!--False: controlled by trigger -->
        <!-- <param name="acquisition_frame_rate" value="20" />           Value: image captured by given framte rate -->
        <!-- +++++++++++ Trigger +++++++++++  -->
        <param name="trigger_source" value="Line3" />                <!-- Line3: Green color and Pin 1 -->
        <param name="enable_trigger" value="On" />
        <param name="trigger_activation_mode" value="RisingEdge" />
        <param name="trigger_overlap_mode" value="ReadOut" />
        <!-- +++++++++++ Exposure  +++++++++++ -->
        <param name="exposure_mode" value="TriggerWidth" />         <!-- Timed: exposure time in a specified value; TriggerWidth: same as primary camera -->
        <!-- <param name="exposure_auto" value="Off" />           Off: given fixed exposure time; Continuous: auto exposure time -->
        <!-- <param name="auto_exposure_time_upper_limit" value="10000" /> --> 
        <!-- <param name="auto_exposure_time_lower_limit" value="300" /> -->
        <!-- <param name="exposure_time" value="3000" />         10000: exposure time in microseconds -->
        <param name="line_selector" value="Line2" />         <!-- Line2: Red color and Pin 3 -->
        <param name="line_mode" value="Output" />            <!-- Output: output exposure state -->
        <param name="line_source" value="ExposureActive" />  <!-- ExposureActive: indicates when the image sensor is exposing -->
        <param name="line_inverter" value="False"/>
        <!-- +++++++++++ Analog +++++++++++ -->
        <param name="auto_gain" value="Continuous" />
        <param name="auto_white_balance" value="Continuous" />

        <!-- Calibration -->
        <!-- Use the camera_calibration package to create this file -->
        <!-- <param name="camera_info_url" if="$(arg left_camera_calibrated)"
               value="file://$(env HOME)/.ros/camera_info/$(arg left_camera_serial).yaml" /> -->
      </node>


      <!-- +++++++++++++ Switch camera time to Arduino time ++++++++++++++++++++ -->
      <node pkg="nodelet" type="nodelet" name="synchronizer_nodelet"
            args="load synchronizer_ros/SynchronizerNodelet /$(arg camera_manager)"
            output="screen" required="true">
        <param name="camera_topic" type="string" value="/$(arg camera_name)/left/" />
        <param name="synchronizer_topic" type="string" value="/rov/synchronizer/cam/" />
        <param name="device_name" type="string" value="left_cam" />
      </node>

      <!-- Disbale the orginal camera driver image_transport publishing -->
      <group ns="image_raw">
        <rosparam param="disable_pub_plugins">
          - 'image_transport/compressedDepth'
          - 'image_transport/theora'
          - 'image_transport/compressed'
        </rosparam>
      </group> 

      <!-- Disbale the sync camera driver image_transport publishing -->
      <group ns="image_numbered/image_raw_sync">
        <rosparam param="disable_pub_plugins">
          - 'image_transport/compressedDepth'
          - 'image_transport/theora'
          <!-- - 'image_transport/compressed' -->
        </rosparam>
      </group>     
      
    </group> <!-- end of group "left" -->

  </group> <!-- end of group "rov/sensors/stereo" -->

</launch>
